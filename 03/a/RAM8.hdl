// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=loadR0, b=loadR1, c=loadR2, d=loadR3, e=loadR4, f=loadR5, g=loadR6, h=loadR7);
    Register(in=in, load=loadR0, out=outR0);
    Register(in=in, load=loadR1, out=outR1);
    Register(in=in, load=loadR2, out=outR2);
    Register(in=in, load=loadR3, out=outR3);
    Register(in=in, load=loadR4, out=outR4);
    Register(in=in, load=loadR5, out=outR5);
    Register(in=in, load=loadR6, out=outR6);
    Register(in=in, load=loadR7, out=outR7);
    Mux8Way16(a=outR0, b=outR1, c=outR2, d=outR3, e=outR4, f=outR5, g=outR6, h=outR7, sel=address, out=out);
}